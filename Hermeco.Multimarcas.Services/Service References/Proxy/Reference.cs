//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hermeco.Multimarcas.Services.Proxy {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Proxy.IAviableReports")]
    public interface IAviableReports {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAviableReports/GetMetaData", ReplyAction="http://tempuri.org/IAviableReports/GetMetaDataResponse")]
        System.Data.DataTable GetMetaData(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAviableReports/GetMetaData", ReplyAction="http://tempuri.org/IAviableReports/GetMetaDataResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetMetaDataAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAviableReports/GetXmlMetaData", ReplyAction="http://tempuri.org/IAviableReports/GetXmlMetaDataResponse")]
        string GetXmlMetaData(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAviableReports/GetXmlMetaData", ReplyAction="http://tempuri.org/IAviableReports/GetXmlMetaDataResponse")]
        System.Threading.Tasks.Task<string> GetXmlMetaDataAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAviableReports/GetReportContent", ReplyAction="http://tempuri.org/IAviableReports/GetReportContentResponse")]
        string GetReportContent(string objectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAviableReports/GetReportContent", ReplyAction="http://tempuri.org/IAviableReports/GetReportContentResponse")]
        System.Threading.Tasks.Task<string> GetReportContentAsync(string objectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAviableReports/GetRemoteObject", ReplyAction="http://tempuri.org/IAviableReports/GetRemoteObjectResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
        object GetRemoteObject(string objectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAviableReports/GetRemoteObject", ReplyAction="http://tempuri.org/IAviableReports/GetRemoteObjectResponse")]
        System.Threading.Tasks.Task<object> GetRemoteObjectAsync(string objectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAviableReports/GetData", ReplyAction="http://tempuri.org/IAviableReports/GetDataResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
        object GetData(string objectName, System.Collections.Generic.Dictionary<string, string> QueryParameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAviableReports/GetData", ReplyAction="http://tempuri.org/IAviableReports/GetDataResponse")]
        System.Threading.Tasks.Task<object> GetDataAsync(string objectName, System.Collections.Generic.Dictionary<string, string> QueryParameters);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAviableReportsChannel : Hermeco.Multimarcas.Services.Proxy.IAviableReports, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AviableReportsClient : System.ServiceModel.ClientBase<Hermeco.Multimarcas.Services.Proxy.IAviableReports>, Hermeco.Multimarcas.Services.Proxy.IAviableReports {
        
        public AviableReportsClient() {
        }
        
        public AviableReportsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AviableReportsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AviableReportsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AviableReportsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable GetMetaData(string userName) {
            return base.Channel.GetMetaData(userName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetMetaDataAsync(string userName) {
            return base.Channel.GetMetaDataAsync(userName);
        }
        
        public string GetXmlMetaData(string userName) {
            return base.Channel.GetXmlMetaData(userName);
        }
        
        public System.Threading.Tasks.Task<string> GetXmlMetaDataAsync(string userName) {
            return base.Channel.GetXmlMetaDataAsync(userName);
        }
        
        public string GetReportContent(string objectName) {
            return base.Channel.GetReportContent(objectName);
        }
        
        public System.Threading.Tasks.Task<string> GetReportContentAsync(string objectName) {
            return base.Channel.GetReportContentAsync(objectName);
        }
        
        public object GetRemoteObject(string objectName) {
            return base.Channel.GetRemoteObject(objectName);
        }
        
        public System.Threading.Tasks.Task<object> GetRemoteObjectAsync(string objectName) {
            return base.Channel.GetRemoteObjectAsync(objectName);
        }
        
        public object GetData(string objectName, System.Collections.Generic.Dictionary<string, string> QueryParameters) {
            return base.Channel.GetData(objectName, QueryParameters);
        }
        
        public System.Threading.Tasks.Task<object> GetDataAsync(string objectName, System.Collections.Generic.Dictionary<string, string> QueryParameters) {
            return base.Channel.GetDataAsync(objectName, QueryParameters);
        }
    }
}
